/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductImport } from './routes/product'
import { Route as AboutImport } from './routes/about'
import { Route as HomeImport } from './routes/Home'
import { Route as IndexImport } from './routes/index'
import { Route as ProductIndexImport } from './routes/product/index'
import { Route as ProductProductIdImport } from './routes/product/$productId'
import { Route as AuthTooltipFocusImport } from './routes/auth/TooltipFocus'
import { Route as CarouselCardsCarouselImport } from './routes/Carousel/CardsCarousel'

// Create/Update Routes

const ProductRoute = ProductImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/Home',
  path: '/Home',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductIndexRoute = ProductIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductRoute,
} as any)

const ProductProductIdRoute = ProductProductIdImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => ProductRoute,
} as any)

const AuthTooltipFocusRoute = AuthTooltipFocusImport.update({
  id: '/auth/TooltipFocus',
  path: '/auth/TooltipFocus',
  getParentRoute: () => rootRoute,
} as any)

const CarouselCardsCarouselRoute = CarouselCardsCarouselImport.update({
  id: '/Carousel/CardsCarousel',
  path: '/Carousel/CardsCarousel',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Home': {
      id: '/Home'
      path: '/Home'
      fullPath: '/Home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductImport
      parentRoute: typeof rootRoute
    }
    '/Carousel/CardsCarousel': {
      id: '/Carousel/CardsCarousel'
      path: '/Carousel/CardsCarousel'
      fullPath: '/Carousel/CardsCarousel'
      preLoaderRoute: typeof CarouselCardsCarouselImport
      parentRoute: typeof rootRoute
    }
    '/auth/TooltipFocus': {
      id: '/auth/TooltipFocus'
      path: '/auth/TooltipFocus'
      fullPath: '/auth/TooltipFocus'
      preLoaderRoute: typeof AuthTooltipFocusImport
      parentRoute: typeof rootRoute
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdImport
      parentRoute: typeof ProductImport
    }
    '/product/': {
      id: '/product/'
      path: '/'
      fullPath: '/product/'
      preLoaderRoute: typeof ProductIndexImport
      parentRoute: typeof ProductImport
    }
  }
}

// Create and export the route tree

interface ProductRouteChildren {
  ProductProductIdRoute: typeof ProductProductIdRoute
  ProductIndexRoute: typeof ProductIndexRoute
}

const ProductRouteChildren: ProductRouteChildren = {
  ProductProductIdRoute: ProductProductIdRoute,
  ProductIndexRoute: ProductIndexRoute,
}

const ProductRouteWithChildren =
  ProductRoute._addFileChildren(ProductRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Home': typeof HomeRoute
  '/about': typeof AboutRoute
  '/product': typeof ProductRouteWithChildren
  '/Carousel/CardsCarousel': typeof CarouselCardsCarouselRoute
  '/auth/TooltipFocus': typeof AuthTooltipFocusRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/product/': typeof ProductIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Home': typeof HomeRoute
  '/about': typeof AboutRoute
  '/Carousel/CardsCarousel': typeof CarouselCardsCarouselRoute
  '/auth/TooltipFocus': typeof AuthTooltipFocusRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/product': typeof ProductIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/Home': typeof HomeRoute
  '/about': typeof AboutRoute
  '/product': typeof ProductRouteWithChildren
  '/Carousel/CardsCarousel': typeof CarouselCardsCarouselRoute
  '/auth/TooltipFocus': typeof AuthTooltipFocusRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/product/': typeof ProductIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Home'
    | '/about'
    | '/product'
    | '/Carousel/CardsCarousel'
    | '/auth/TooltipFocus'
    | '/product/$productId'
    | '/product/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Home'
    | '/about'
    | '/Carousel/CardsCarousel'
    | '/auth/TooltipFocus'
    | '/product/$productId'
    | '/product'
  id:
    | '__root__'
    | '/'
    | '/Home'
    | '/about'
    | '/product'
    | '/Carousel/CardsCarousel'
    | '/auth/TooltipFocus'
    | '/product/$productId'
    | '/product/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRoute: typeof HomeRoute
  AboutRoute: typeof AboutRoute
  ProductRoute: typeof ProductRouteWithChildren
  CarouselCardsCarouselRoute: typeof CarouselCardsCarouselRoute
  AuthTooltipFocusRoute: typeof AuthTooltipFocusRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRoute,
  AboutRoute: AboutRoute,
  ProductRoute: ProductRouteWithChildren,
  CarouselCardsCarouselRoute: CarouselCardsCarouselRoute,
  AuthTooltipFocusRoute: AuthTooltipFocusRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Home",
        "/about",
        "/product",
        "/Carousel/CardsCarousel",
        "/auth/TooltipFocus"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Home": {
      "filePath": "Home.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/product": {
      "filePath": "product.tsx",
      "children": [
        "/product/$productId",
        "/product/"
      ]
    },
    "/Carousel/CardsCarousel": {
      "filePath": "Carousel/CardsCarousel.tsx"
    },
    "/auth/TooltipFocus": {
      "filePath": "auth/TooltipFocus.tsx"
    },
    "/product/$productId": {
      "filePath": "product/$productId.tsx",
      "parent": "/product"
    },
    "/product/": {
      "filePath": "product/index.tsx",
      "parent": "/product"
    }
  }
}
ROUTE_MANIFEST_END */
